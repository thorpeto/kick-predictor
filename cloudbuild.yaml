steps:
  # Build des Backend-Images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/kick-predictor-backend', './backend']

  # Push des Backend-Images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kick-predictor-backend']

  # Deploy des Backends auf Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'kick-predictor-backend'
      - '--image=gcr.io/$PROJECT_ID/kick-predictor-backend'
      - '--region=europe-west3'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--set-env-vars=ENVIRONMENT=production'

  # Build des Frontend-Images mit Backend-URL
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$(gcloud run services describe kick-predictor-backend --region=europe-west3 --format='value(status.url)')
        docker build -t gcr.io/$PROJECT_ID/kick-predictor-frontend \
          --build-arg VITE_API_URL=$$BACKEND_URL \
          ./frontend

  # Push des Frontend-Images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kick-predictor-frontend']

  # Deploy des Frontends auf Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'kick-predictor-frontend'
      - '--image=gcr.io/$PROJECT_ID/kick-predictor-frontend'
      - '--region=europe-west3'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=256Mi'
      - '--min-instances=0'
      - '--max-instances=3'
      - '--set-env-vars=NODE_ENV=production'

# Die zu speichernden Images
images:
  - 'gcr.io/$PROJECT_ID/kick-predictor-backend'
  - 'gcr.io/$PROJECT_ID/kick-predictor-frontend'

# Timeout-Einstellung f√ºr die Build-Pipeline
timeout: '1800s'